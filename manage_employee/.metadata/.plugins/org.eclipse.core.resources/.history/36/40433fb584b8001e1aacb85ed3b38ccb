package huana.com.vn.manage_employees.view_model;

import java.util.List;
import org.zkoss.bind.annotation.BindingParam;
import org.zkoss.bind.annotation.Init;
import org.zkoss.zk.ui.annotation.Command;
import org.zkoss.zk.ui.event.Event;
import org.zkoss.zk.ui.event.EventListener;
import org.zkoss.zul.ListModelList;
import org.zkoss.zul.Messagebox;
import huana.com.vn.manage_employees.model.Employee;
import huana.com.vn.manage_employees.service.EmployeeServiceImpl;

public class EmployeesViewModel {
	private String nameSearch;
	private List<Employee> employees = new ListModelList<Employee>();
	private Employee selectEmployee;
	private Integer idEmployee;
	private EmployeeServiceImpl employeeService= new EmployeeServiceImpl();
	
	 @Init
	  public void init() {
	   employees.clear();
	   employees.addAll(employeeService.findAll());
	   }

	@Command("search")
	public void search() {
		System.out.println(nameSearch);
		employees.clear();
		employees.addAll(employeeService.searchEmployees(nameSearch));
	}
	@Command
	public void removeRecord(@BindingParam("entity") Employee employee) {
		Messagebox.show("Bạn muốn xóa dữ liệu này?", "Xác nhận", Messagebox.CANCEL | Messagebox.OK, Messagebox.QUESTION,
                new EventListener<Event>() {
                    @Override
                    public void onEvent(final Event event) {
                        if (Messagebox.ON_OK.equals(event.getName())) {
                            EmployeesViewModel.this.deleteEmployee(employee);
                        }
                    }
                });
	}
	@Command
	public void deleteEmployee(Employee employee) {
		employeeService.deleteEmployeeByOfId(employee.getId());
	}

	public List<Employee> getEmployees() {
		return employees;
	}

	public void setEmployees(List<Employee> employees) {
		this.employees = employees;
	}

	public String getNameSearch() {
		System.out.println(15);
		return nameSearch;
	}

	public void setNameSearch(String nameSearch) {
		this.nameSearch = nameSearch;
	}

	
	
 }
